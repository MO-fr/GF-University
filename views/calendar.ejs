<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Greenfield University Calendar</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/calendar.css">
</head>
<body class="font-sans antialiased">
    <div class="container mx-auto max-w-4xl px-4 py-8">
        <div class="bg-white shadow-xl rounded-xl overflow-hidden border-4 border-green-600">
            <div class="bg-gradient-to-r from-green-600 to-green-800 text-white p-6">
                <h1 class="text-3xl font-bold text-center flex items-center justify-center">
                    <svg class="w-10 h-10 mr-3" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M12.316 3.051a1 1 0 01.633 1.265l-4 12a1 1 0 11-1.898-.632l4-12a1 1 0 011.265-.633zM5.707 6.293a1 1 0 010 1.414L3.414 10l2.293 2.293a1 1 0 11-1.414 1.414l-3-3a1 1 0 010-1.414l3-3a1 1 0 011.414 0zm8.586 0a1 1 0 011.414 0l3 3a1 1 0 010 1.414l-3 3a1 1 0 11-1.414-1.414L16.586 10l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd"/>
                    </svg>
                    Greenfield University Calendar
                </h1>
            </div>

            <div class="p-6">
                <div class="calendar-container bg-green-50 p-6 rounded-lg border border-green-200">
                    <div class="calendar-header flex justify-between items-center mb-6">
                        <button id="prevMonth" class="text-2xl text-green-600 hover:text-green-800 transition-colors">&larr;</button>
                        <h2 id="currentMonth" class="text-2xl font-semibold text-green-800"></h2>
                        <button id="nextMonth" class="text-2xl text-green-600 hover:text-green-800 transition-colors">&rarr;</button>
                    </div>
                    
                    <div class="grid grid-cols-7 gap-2 text-center mb-4 text-green-700 font-medium">
                        <div>Sun</div>
                        <div>Mon</div>
                        <div>Tue</div>
                        <div>Wed</div>
                        <div>Thu</div>
                        <div>Fri</div>
                        <div>Sat</div>
                    </div>
                    
                    <div id="calendarGrid" class="grid grid-cols-7 gap-2 text-center"></div>
                </div>

                <div class="mt-8 bg-white shadow-md rounded-lg p-6 border border-green-200">
                    <h3 class="text-xl font-semibold mb-4 text-green-800">Add Campus Event</h3>
                    <form id="eventForm" class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <input type="text" id="eventTitle" placeholder="Event Title" 
                            class="p-3 border border-green-300 rounded focus:ring-2 focus:ring-green-500 w-full">
                        <input type="date" id="eventDate" 
                            class="p-3 border border-green-300 rounded focus:ring-2 focus:ring-green-500 w-full">
                        <select id="eventType" class="p-3 border border-green-300 rounded focus:ring-2 focus:ring-green-500 w-full">
                            <option value="">Select Event Category</option>
                            <option value="academic">Academic</option>
                            <option value="social">Campus Social</option>
                            <option value="sports">Athletics</option>
                            <option value="club">Student Club</option>
                        </select>
                        <textarea id="eventDescription" placeholder="Event Description" 
                            class="p-3 border border-green-300 rounded focus:ring-2 focus:ring-green-500 w-full col-span-full"></textarea>
                        <button type="submit" 
                            class="bg-green-600 text-white p-3 rounded hover:bg-green-700 transition-colors col-span-full">
                            Add Event
                        </button>
                    </form>
                </div>
                
                <div id="eventList" class="mt-8 bg-white shadow-md rounded-lg p-6 border border-green-200">
                    <h3 class="text-xl font-semibold mb-4 text-green-800">Upcoming Campus Events</h3>
                </div>
            </div>
        </div>
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', () => {
        const calendarGrid = document.getElementById('calendarGrid');
        const currentMonthDisplay = document.getElementById('currentMonth');
        const prevMonthBtn = document.getElementById('prevMonth');
        const nextMonthBtn = document.getElementById('nextMonth');
        const eventForm = document.getElementById('eventForm');
        const eventList = document.getElementById('eventList');

        let currentDate = new Date();
        let events = JSON.parse(localStorage.getItem('calendarEvents')) || [];

        function saveEvents() {
            localStorage.setItem('calendarEvents', JSON.stringify(events));
        }

        function renderCalendar(date) {
            const year = date.getFullYear();
            const month = date.getMonth();

            currentMonthDisplay.textContent = new Date(year, month).toLocaleString('default', { month: 'long', year: 'numeric' });

            calendarGrid.innerHTML = '';

            const firstDay = new Date(year, month, 1);
            const lastDay = new Date(year, month + 1, 0);

            for (let i = 0; i < firstDay.getDay(); i++) {
                calendarGrid.appendChild(document.createElement('div'));
            }

            for (let day = 1; day <= lastDay.getDate(); day++) {
                const dayElement = document.createElement('div');
                dayElement.textContent = day;
                
                const fullDate = `${year}-${String(month + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`;
                dayElement.dataset.date = fullDate;

                dayElement.classList.add(
                    'p-2', 'border', 'text-center', 
                    'cursor-pointer', 'hover:bg-blue-100', 'rounded'
                );

                // Highlight days with events
                const dayEvents = events.filter(event => event.date === fullDate);
                if (dayEvents.length > 0) {
                    dayElement.classList.add('bg-green-200');
                    dayEvents.forEach(() => {
                        const eventMarker = document.createElement('div');
                        eventMarker.classList.add('h-1', 'w-1', 'bg-red-500', 'rounded-full', 'mx-auto', 'mt-1');
                        dayElement.appendChild(eventMarker);
                    });
                }

                dayElement.addEventListener('click', () => {
                    document.getElementById('eventDate').value = fullDate;
                    eventForm.scrollIntoView({ behavior: 'smooth' });
                });

                calendarGrid.appendChild(dayElement);
            }

            renderEventList();
        }

        function renderEventList() {
            const upcomingEvents = events
                .sort((a, b) => new Date(a.date) - new Date(b.date))
                .slice(0, 5);

            eventList.innerHTML = `
                <h3 class="text-xl font-semibold mb-4 text-gray-800">Upcoming Events</h3>
                ${upcomingEvents.length ? 
                    upcomingEvents.map(event => `
                        <div class="border-b py-2">
                            <strong>${event.title}</strong>
                            <p>${event.date} - ${event.type}</p>
                            <p>${event.description || ''}</p>
                        </div>
                    `).join('') : 
                    '<p>No upcoming events</p>'
                }
            `;
        }

        prevMonthBtn.addEventListener('click', () => {
            currentDate.setMonth(currentDate.getMonth() - 1);
            renderCalendar(currentDate);
        });

        nextMonthBtn.addEventListener('click', () => {
            currentDate.setMonth(currentDate.getMonth() + 1);
            renderCalendar(currentDate);
        });

        eventForm.addEventListener('submit', (e) => {
            e.preventDefault();
            const newEvent = {
                id: Date.now(),
                title: document.getElementById('eventTitle').value,
                date: document.getElementById('eventDate').value,
                type: document.getElementById('eventType').value,
                description: document.getElementById('eventDescription').value
            };

            events.push(newEvent);
            saveEvents();
            
            eventForm.reset();
            renderCalendar(currentDate);
        });

        // Initial render
        renderCalendar(currentDate);
    });
    </script>
</body>
</html>